/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
def versions = [:]
versions.kotlin_version = "1.3.31"
versions.android_gradle_plugin = "3.4.2"
versions.core_appcompat = "1.0.2"
versions.core_ktx = "1.0.2"
versions.constraint_layout = "1.1.3"
versions.junit = "4.12"
versions.ext_junit="1.1.1"
versions.test_runner = "1.2.0"
versions.mockito = "2.25.0"
versions.mockito_all = "1.10.19"
versions.mockito_android = "2.25.0"
versions.espresso = "3.2.0"
versions.room = "2.1.0"
versions.dagger = '2.22'
versions.retrofit = "2.5.0"
versions.httpinterceptor = "3.9.1"
versions.lifecycle = "2.0.0"
versions.lifecycle_kotlin="2.2.0-alpha02"
versions.glide = "4.9.0"
versions.support_library = "28.0.0"
versions.paging = "2.1.0"
versions.material = "1.0.0"
versions.googlemap = "12.0.1"
versions.coroutine = "1.2.1"
ext.versions = versions

def kotlin = [:]
kotlin.lib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin_version"
kotlin.gradle_plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin_version"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin_version"

deps.kotlin = kotlin

deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"

deps.androidx_appcompat = "androidx.appcompat:appcompat:$versions.core_appcompat"
deps.androidx_ktx = "androidx.core:core-ktx:$versions.core_ktx"
deps.constraintlayout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"

//testing
deps.junit = "junit:junit:$versions.junit"
deps.ext_junit="androidx.test.ext:junit:$versions.ext_junit"
deps.test_runner = "androidx.test:runner:$versions.test_runner"
deps.espresso_core = "androidx.test.espresso:espresso-core:$versions.espresso"
deps.espresso_ideling="androidx.test.espresso:espresso-idling-resource:$versions.espresso"

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
mockito.android = "org.mockito:mockito-android:$versions.mockito_android"
deps.mockito = mockito

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"// For Kotlin use kapt instead of annotationProcessor
// optional - Kotlin Extensions and Coroutines support for Room
room.ktx = "androidx.room:room-ktx:$versions.room"
// Test helpers
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room


def dagger = [:]
dagger.coredagger = "com.google.dagger:dagger:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
// Dagger Android
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.android_processor = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger


def retrofit = [:]
retrofit.core = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson_converter = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit


deps.httpinterceptor = "com.squareup.okhttp3:logging-interceptor:$versions.httpinterceptor"


def lifecycle = [:]
// ViewModel and LiveData
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle" // For Kotlin use kapt instead of annotationProcessor
// alternately - if using Java8, use the following instead of lifecycle-compiler
//implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
// optional - Test helpers for LiveData
lifecycle.livedata_kotlin="androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle_kotlin"
lifecycle.testing = "androidx.arch.core:core-testing:$versions.lifecycle"
deps.lifecycle = lifecycle


def glide = [:]
glide.core = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide


def support_library = [:]
support_library.recyclerview = "com.android.support:recyclerview-v7:$versions.support_library"
support_library.cardview = "com.android.support:cardview-v7:$versions.support_library"
support_library.appcompat = "com.android.support:appcompat-v7:$versions.support_library"
deps.support_library = support_library


def paging = [:]
paging.runtime = "androidx.paging:paging-runtime-ktx:$versions.paging"
deps.paging = paging


deps.material = "com.google.android.material:material:$versions.material"


def googlemap = [:]
googlemap.play_services = "com.google.android.gms:play-services:$versions.googlemap"
deps.googlemap = googlemap


def coroutine = [:]
coroutine.core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutine"
coroutine.android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutine"
deps.coroutine = coroutine


def build_versions = [:]
build_versions.min_sdk = 21
build_versions.target_sdk = 28
build_versions.build_tools = "28.0.3"
ext.build_versions = build_versions


//Add final
ext.deps = deps

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
}

ext.addRepos = this.&addRepos